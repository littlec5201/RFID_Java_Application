/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ClassModel.DBConnection;
import com.fazecast.jSerialComm.SerialPort;
import java.awt.Component;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Formatter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author Callum
 */
public class CourseForm extends javax.swing.JPanel {

    private Connection connection;
    private Statement statement;
    private JFrame frame;

    /**
     * Creates new form NewStudentForm
     */
    public CourseForm(JFrame frame) {
        initialiseConstructor(frame);
    }

    public void initialiseConstructor(JFrame frame) {
        this.frame = frame;
        DBConnection dbConnection = new DBConnection();
        connection = dbConnection.getConnection();
        initComponents();
        comboTeacher.setModel(new javax.swing.DefaultComboBoxModel<>(getTeachers()));
        comboTeacher.setSelectedItem(null);

        txtClassCode.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                String key = String.valueOf(e.getKeyChar());
                Pattern pattern = Pattern.compile("[a-zA-Z0-9]");
                Matcher matcher = pattern.matcher(key);
                if (txtClassCode.getText().length() >= 9) {
                    e.consume();
                } else if (!matcher.find()) {
                    e.consume();
                }
            }
        });
    }

    public void clearForm() {
        txtClassCode.setText(null);
        comboTeacher.setSelectedItem(null);
    }

    public String[] getTeachers() {
        try {
            ArrayList<String> teacherList = new ArrayList<String>();
            statement = connection.createStatement();
            ResultSet rowCountSet = statement.executeQuery("SELECT COUNT(*) AS count FROM teacher");
            rowCountSet.next();
            int count = rowCountSet.getInt("count");

            String[] teacherArray = new String[count];
            int i = 0;
            ResultSet teacherSet = statement.executeQuery("SELECT * FROM teacher");

            while (teacherSet.next()) {
                int teacherID = teacherSet.getInt("teacherID");
                String username = teacherSet.getString("username");
                
                teacherArray[i] = "" + teacherID + ")" + username; 
                i++;
            }
            return teacherArray;
        } catch (SQLException ex) {
            Logger.getLogger(CourseForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblClassCode = new javax.swing.JLabel();
        lblTeacher = new javax.swing.JLabel();
        comboTeacher = new javax.swing.JComboBox<>();
        lblTitle = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtClassCode = new javax.swing.JFormattedTextField();
        btnHome = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        lblClassCode.setText("Class Code: ");
        lblClassCode.setPreferredSize(new java.awt.Dimension(90, 20));

        lblTeacher.setText("Teacher:");
        lblTeacher.setPreferredSize(new java.awt.Dimension(90, 20));

        comboTeacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboTeacher.setPreferredSize(new java.awt.Dimension(56, 20));

        lblTitle.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        lblTitle.setText("Add Course");
        lblTitle.setPreferredSize(new java.awt.Dimension(200, 44));

        btnSubmit.setText("Submit");
        btnSubmit.setMaximumSize(new java.awt.Dimension(60, 25));
        btnSubmit.setMinimumSize(new java.awt.Dimension(60, 25));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtClassCode.setBackground(new java.awt.Color(255, 255, 255));
        txtClassCode.setPreferredSize(new java.awt.Dimension(4, 20));

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblClassCode, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(lblTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addComponent(btnHome))
                    .addComponent(txtClassCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboTeacher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClassCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClassCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(147, 147, 147)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHome))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        try {
            statement = connection.createStatement();
            ResultSet classCodeSet = statement.executeQuery("SELECT count(*) AS count FROM class WHERE classCode = '" + txtClassCode.getText() + "'");
            classCodeSet.next();
            int classCodeCount = classCodeSet.getInt("count");

            String classCode = txtClassCode.getText();
            
            Object comboRetrieve = comboTeacher.getSelectedItem();
            String comboString = comboRetrieve.toString();
            String[] comboSplit = comboString.split("\\)");
            int teacherID = Integer.parseInt(comboSplit[0]);
            
            if (classCodeCount == 0) {
                statement.execute("INSERT INTO class (classID, classCode, teacherID) "
                        + "VALUES (NULL, '" + classCode + "', " + teacherID + ")");

                JOptionPane.showMessageDialog(this,
                        "Course successfully added",
                        "RFID System",
                        JOptionPane.PLAIN_MESSAGE);
                clearForm();
            }
        } catch (SQLException ex) {
            Logger.getLogger(CourseForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        frame.remove(this);
        frame.add(new HomeForm(frame));
        frame.pack();
    }//GEN-LAST:event_btnHomeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> comboTeacher;
    private javax.swing.JLabel lblClassCode;
    private javax.swing.JLabel lblTeacher;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JFormattedTextField txtClassCode;
    // End of variables declaration//GEN-END:variables
}
