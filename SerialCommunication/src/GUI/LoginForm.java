/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ClassModel.DBConnection;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Callum
 */
public class LoginForm extends javax.swing.JPanel {

    private Connection connection;
    private Statement statement;
    private JFrame frame;
    private int maxUsername;
    private int maxPassword;

    /**
     * Creates new form LoginForm
     */
    public LoginForm(JFrame frame) {
        initialiseConstructor(frame);
    }

    /**
     * This method is used to initialize the login form with a title, username
     * field as well as a password field. Here, the connection with the database
     * is established.
     *
     * @param frame the frame storing the panel
     */
    public void initialiseConstructor(JFrame frame) {
        this.frame = frame;
        DBConnection dbConnection = new DBConnection();
        connection = dbConnection.getConnection();
        initComponents();
        txtUsername.setTransferHandler(null);
        txtPassword.setTransferHandler(null);

        /*
        Gets the column size for specified columns. This may be later removed as it tells hackers/ unauthorized 
        users the maximum length a username and password can be, but for now, it will be kept.
         */
        try {
            DatabaseMetaData meta = connection.getMetaData();
            ResultSet columns = meta.getColumns(null, null, "teacher", null);

            while (columns.next()) {
                String columnName = columns.getString("COLUMN_NAME");
                switch (columnName) {
                    case "username":
                        maxUsername = columns.getInt("COLUMN_SIZE") - 1;
                        break;
                    case "password":
                        maxPassword = columns.getInt("COLUMN_SIZE") - 1;
                        break;
                    default:
                        break;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        txtUsername.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                String key = String.valueOf(e.getKeyChar());
                Pattern pattern = Pattern.compile("[a-zA-Z0-9]");
                Matcher matcher = pattern.matcher(key);
                if (txtUsername.getText().length() >= maxUsername) {
                    e.consume();
                } else if (!matcher.find()) {
                    e.consume();
                }
            }
        });

        txtPassword.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                String key = String.valueOf(e.getKeyChar());
                if (txtPassword.getText().length() >= maxPassword) {
                    e.consume();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtUsername = new javax.swing.JFormattedTextField();
        txtPassword = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(0, 204, 204));

        lblUsername.setText("Username:");
        lblUsername.setPreferredSize(new java.awt.Dimension(90, 20));

        lblPassword.setText("Password: ");
        lblPassword.setPreferredSize(new java.awt.Dimension(90, 20));

        lblTitle.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        lblTitle.setText("Login");
        lblTitle.setPreferredSize(new java.awt.Dimension(200, 44));

        btnSubmit.setText("Submit");
        btnSubmit.setMaximumSize(new java.awt.Dimension(60, 25));
        btnSubmit.setMinimumSize(new java.awt.Dimension(60, 25));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtUsername.setBackground(new java.awt.Color(255, 255, 255));
        txtUsername.setPreferredSize(new java.awt.Dimension(4, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPassword))
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method is called when the submit button is pressed. It then calls
     * the login method and takes the fields from the form as parameters
     *
     * @param evt the submit button is pressed
     */
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        login(username, password);
    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * This method attempts to log a user in based on the username and password credentials.
     *
     * @param username the username of the teacher
     * @param password the password of the teacher
     * @return whether the teacher with the provided credentials is stored in
     * the database or not
     */
    public boolean login(String username, String password) {
        try {
            statement = connection.createStatement();
            /**
             * The usernamePasswordSet returns 
             */
            ResultSet usernamePasswordSet = statement.executeQuery("SELECT count(*) AS count FROM teacher WHERE username = '" + username + "' AND password = '" + password + "'");
            int usernamePasswordCount = 0;
            try {
                usernamePasswordSet.next();
                usernamePasswordCount = usernamePasswordSet.getInt("count");

                if (usernamePasswordCount != 0) {
                    JOptionPane.showMessageDialog(this,
                            "Welcome",
                            "RFID System",
                            JOptionPane.PLAIN_MESSAGE);
                    openHome();
                }
            } catch (Exception e) {
            }
        } catch (SQLException ex) {
        }
        return false;
    }

    public void openHome() {
        frame.remove(this);
        frame.add(new HomeForm(frame));
        frame.pack();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JFormattedTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
